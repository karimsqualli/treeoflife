<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TaxonBigVignette.CurrentImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>